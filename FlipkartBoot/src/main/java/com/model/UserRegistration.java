package com.model;
// Generated Jun 11, 2019 4:21:47 PM by Hibernate Tools 5.1.7.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * UserRegistration generated by hbm2java
 */
@Entity
@Table(name = "user_registration", catalog = "flipkart", uniqueConstraints = @UniqueConstraint(columnNames = "USERNAME"))
public class UserRegistration implements java.io.Serializable {

	private long userId;
	private User user;
	private String username;
	private String password;
	private Short passwordInvalid;
	private String resetPasswordCode;
	private Short timeout;
	private Date passwordCreationTime;
	private Date resetPasswordTime;
	private Short field1;
	private Integer field2;
	private String field3;
	private Date field4;

	public UserRegistration() {
	}

	public UserRegistration(User user, String username, String password, Date passwordCreationTime,
			Date resetPasswordTime, Date field4) {
		this.user = user;
		this.username = username;
		this.password = password;
		this.passwordCreationTime = passwordCreationTime;
		this.resetPasswordTime = resetPasswordTime;
		this.field4 = field4;
	}

	public UserRegistration(User user, String username, String password, Short passwordInvalid,
			String resetPasswordCode, Short timeout, Date passwordCreationTime, Date resetPasswordTime, Short field1,
			Integer field2, String field3, Date field4) {
		this.user = user;
		this.username = username;
		this.password = password;
		this.passwordInvalid = passwordInvalid;
		this.resetPasswordCode = resetPasswordCode;
		this.timeout = timeout;
		this.passwordCreationTime = passwordCreationTime;
		this.resetPasswordTime = resetPasswordTime;
		this.field1 = field1;
		this.field2 = field2;
		this.field3 = field3;
		this.field4 = field4;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "user"))
	@Id
	@GeneratedValue(generator = "generator")

	@Column(name = "USER_ID", unique = true, nullable = false)
	public long getUserId() {
		return this.userId;
	}

	public void setUserId(long userId) {
		this.userId = userId;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "USERNAME", unique = true, nullable = false, length = 128)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "PASSWORD", nullable = false, length = 128)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "PASSWORD_INVALID")
	public Short getPasswordInvalid() {
		return this.passwordInvalid;
	}

	public void setPasswordInvalid(Short passwordInvalid) {
		this.passwordInvalid = passwordInvalid;
	}

	@Column(name = "RESET_PASSWORD_CODE", length = 128)
	public String getResetPasswordCode() {
		return this.resetPasswordCode;
	}

	public void setResetPasswordCode(String resetPasswordCode) {
		this.resetPasswordCode = resetPasswordCode;
	}

	@Column(name = "TIMEOUT")
	public Short getTimeout() {
		return this.timeout;
	}

	public void setTimeout(Short timeout) {
		this.timeout = timeout;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "PASSWORD_CREATION_TIME", nullable = false, length = 26)
	public Date getPasswordCreationTime() {
		return this.passwordCreationTime;
	}

	public void setPasswordCreationTime(Date passwordCreationTime) {
		this.passwordCreationTime = passwordCreationTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "RESET_PASSWORD_TIME", nullable = false, length = 26)
	public Date getResetPasswordTime() {
		return this.resetPasswordTime;
	}

	public void setResetPasswordTime(Date resetPasswordTime) {
		this.resetPasswordTime = resetPasswordTime;
	}

	@Column(name = "FIELD1")
	public Short getField1() {
		return this.field1;
	}

	public void setField1(Short field1) {
		this.field1 = field1;
	}

	@Column(name = "FIELD2")
	public Integer getField2() {
		return this.field2;
	}

	public void setField2(Integer field2) {
		this.field2 = field2;
	}

	@Column(name = "FIELD3", length = 256)
	public String getField3() {
		return this.field3;
	}

	public void setField3(String field3) {
		this.field3 = field3;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FIELD4", nullable = false, length = 26)
	public Date getField4() {
		return this.field4;
	}

	public void setField4(Date field4) {
		this.field4 = field4;
	}

}
